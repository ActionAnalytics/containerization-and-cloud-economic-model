{
	"info": {
		"_postman_id": "da7eb277-93e2-4ec9-847b-d8d90e149395",
		"name": "COMFORT_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Search Forms",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6bbdb08e-7adf-4c31-9857-e2434ca2bfea",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns single item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData).to.have.lengthOf(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/forms?slug=mines&public=true&active=true&name=indu&keyword=camps",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"forms"
					],
					"query": [
						{
							"key": "slug",
							"value": "mines"
						},
						{
							"key": "public",
							"value": "true"
						},
						{
							"key": "active",
							"value": "true"
						},
						{
							"key": "name",
							"value": "indu"
						},
						{
							"key": "keyword",
							"value": "camps"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Current Mines Form Definition",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2525a52a-e14d-4b7f-8579-3253ad7543df",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns the correct item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('metadata');",
							"    pm.expect(jsonData.metadata).to.have.property('slug');",
							"    pm.expect(jsonData.metadata.slug).to.equal('minesattestations');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/current",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"current"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Submission",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc0024a7-ec6d-4217-aa31-d42c36ed6f74",
						"exec": [
							"pm.test(\"201 response\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Returns single item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('confirmationId');",
							"    pm.collectionVariables.set('submissionId', jsonData.submissionId);",
							"    pm.collectionVariables.set('confirmationId', jsonData.confirmationId);",
							"    pm.collectionVariables.set('submission', JSON.stringify(jsonData));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"attestation\": {\n\t\t\"guidelinesRead\": true,\n\t\t\"assessmentCompleted\": true,\n\t\t\"developedPlan\": true,\n\t\t\"protectionSignage\": true,\n\t\t\"workerContactPersonnel\": true,\n\t\t\"commonAreaDistancing\": true,\n\t\t\"sleepingAreaType\": \"SHARED\",\n\t\t\"sharedSleepingPerRoom\": 7,\n\t\t\"sharedSleepingDistancing\": true,\n\t\t\"selfIsolateUnderstood\": true,\n\t\t\"selfIsolateAccommodation\": true,\n\t\t\"laundryServices\": true,\n\t\t\"wasteManagementGloves\": true,\n\t\t\"wasteManagementSchedule\": true,\n\t\t\"wasteManagementBags\": true,\n\t\t\"handWashingStations\": true,\n\t\t\"handWashingSoapWater\": true,\n\t\t\"handWashingWaterless\": true,\n\t\t\"handWashingPaperTowels\": true,\n\t\t\"handWashingSignage\": true,\n\t\t\"distancingMaintained\": true,\n\t\t\"distancingFaceShields\": true,\n\t\t\"disinfectingSchedule\": true,\n\t\t\"educationSignage\": true,\n\t\t\"educationContactPersonnel\": true,\n\t\t\"trainingCovid19\": true,\n\t\t\"trainingEtiquette\": true,\n\t\t\"trainingLocations\": true,\n\t\t\"trainingFirstAid\": true,\n\t\t\"trainingReporting\": true,\n\t\t\"mealsDistancing\": true,\n\t\t\"mealsDishware\": true,\n\t\t\"mealsDishwashing\": true,\n\t\t\"infectionSeparation\": true,\n\t\t\"infectionSymptoms\": true,\n\t\t\"infectionHeathLinkBC\": true,\n\t\t\"infectionSanitization\": true,\n\t\t\"infectionAccommodation\": true,\n\t\t\"infectedFeeding\": true,\n\t\t\"infectedHousekeeping\": true,\n\t\t\"infectedWaste\": true,\n\t\t\"certifyAccurateInformation\": true,\n\t\t\"agreeToInspection\": true\t\t\n\t},\n\t\"business\": {\n\t\t\"name\": \"Rad Biz\",\n\t\t\"orgBookId\": null,\n\t\t\"addressLine1\": \"1234 Here St\",\n\t\t\"addressLine2\": null,\n\t\t\"city\": \"Saanich\",\n\t\t\"province\": \"BC\",\n\t\t\"postalCode\": \"ABCDEF\"\t\n\t},\n\t\"contacts\":[\n\t\t{\n\t\t\t\"contactType\": \"PRIMARY\",\n\t\t\t\"firstName\": \"Jane\",\n\t\t\t\"lastName\": \"Doe\",\n\t\t\t\"phone1\": \"1234567890\",\n\t\t\t\"phone2\": \"\",\n\t\t\t\"email\": \"jane@doe.com\"\n\t\t},\n\t    {\t\t\t\n\t\t\t\"contactType\": \"COVID_COORDINATOR\",\n\t\t\t\"firstName\": \"John\",\n\t\t\t\"lastName\": \"D'oh\",\n\t\t\t\"phone1\": \"0987654321\",\n\t\t\t\"phone2\": \"\",\n\t\t\t\"email\": \"john@doh.com\"\n\t\t}\n\t],\n\t\"location\": {\n\t\t\"startDate\": \"2020-05-10\",\n\t\t\"endDate\": \"2020-07-30\",\n\t\t\"city\": \"Victoria, BC\",\n\t\t\"cityLatitude\": null,\n\t\t\"cityLongitude\": null,\n\t\t\"mineNumber\": \"\",\n\t\t\"permitNumber\": \"\",\n\t\t\"numberOfWorkers\": 10,\n\t\t\"accTents\": false,\n\t\t\"tentDetails\": \"\",\n\t\t\"accMotel\": false,\n\t\t\"motelName\": \"\",\n\t\t\"motelAddressLine1\": \"\",\n\t\t\"motelAddressLine2\": \"\",\n\t\t\"motelCity\": \"\",\n\t\t\"motelProvince\": \"\",\n\t\t\"motelPostalCode\": \"\",\n\t\t\"accWorkersHome\": false\n\t}\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Submission",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "042c21e7-ecde-4e8b-b372-7e5dff70a11d",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns the correct item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('confirmationId');",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData.confirmationId).to.equal(pm.collectionVariables.get('confirmationId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Submissions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6265a759-a053-4c4c-8058-954ac82bd28d",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"    pm.expect(jsonData).to.have.lengthOf(1);",
							"});",
							"pm.test(\"Returns the correct item\", function () {",
							"    var jsonData = pm.response.json()[0];",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('confirmationId');",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData.confirmationId).to.equal(pm.collectionVariables.get('confirmationId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions?version=1&city=Vic&business=Rad&confirmationId={{confirmationId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions"
					],
					"query": [
						{
							"key": "version",
							"value": "1"
						},
						{
							"key": "city",
							"value": "Vic"
						},
						{
							"key": "business",
							"value": "Rad"
						},
						{
							"key": "confirmationId",
							"value": "{{confirmationId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Status (with notes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "127ebb3f-119e-4d6a-8833-d5378b601f46",
						"exec": [
							"pm.test(\"201 response\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Returns single item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('code');",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData.submissionStatusId).to.not.be.null;",
							"    pm.expect(jsonData.code).to.equal('ASSIGNED');",
							"    pm.expect(jsonData.notes).to.be.an('array');",
							"    pm.expect(jsonData.notes).to.have.lengthOf(1);",
							"    pm.expect(jsonData.notes[0].note).to.equal('a note added to status in one call')",
							"    pm.collectionVariables.set('submissionStatusId', jsonData.submissionStatusId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"code\": \"ASSIGNED\",\n\t\"assignedTo\": \"ME!\",\n\t\"notes\": [\n\t\t{\n\t\t\t\"note\": \"a note added to status in one call\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}/statuses",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}",
						"statuses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Statuses",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f11c046b-1b1e-472a-ab9d-f0fed62515eb",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"pm.test(\"Added status is first in list\", function () {",
							"    // assumes this is run after Add Status (with notes)",
							"    var jsonData = pm.response.json()[0];",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('submissionStatusId');",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData.submissionStatusId).to.equal(pm.collectionVariables.get('submissionStatusId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"code\": \"ASSIGNED\",\n\t\"assignedTo\": \"ME!\",\n\t\"notes\": [{\"note\": \"voila!\"}]\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}/statuses",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}",
						"statuses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Submission Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3703936f-c796-46da-90c8-2bc92540b183",
						"exec": [
							"pm.test(\"201 response\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Returns single item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('note');",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData.submissionStatusId).to.be.null;",
							"    pm.expect(jsonData.noteId).to.not.be.null;",
							"    pm.expect(jsonData.note).to.equal('this note is for the submission');",
							"    pm.collectionVariables.set('submissionNoteId', jsonData.noteId);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"note\": \"this note is for the submission\"\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}/notes",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Submission Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ae1b7c13-9129-4ab5-b1d6-e05cfec0094e",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"pm.test(\"Added note is first in list\", function () {",
							"    // assumes this is run after Add Submission Note",
							"    var jsonData = pm.response.json()[0];",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('submissionStatusId');",
							"    pm.expect(jsonData).to.have.property('noteId');",
							"    pm.expect(jsonData.submissionId).to.not.be.null;",
							"    pm.expect(jsonData.submissionStatusId).to.be.null;",
							"    pm.expect(jsonData.noteId).to.not.be.null;",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData.noteId).to.equal(pm.collectionVariables.get('submissionNoteId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"note\": \"this note is for the submission\"\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}/notes",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Status Note",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e0c47c1-40a9-49e8-8bd8-2b8312e4d726",
						"exec": [
							"pm.test(\"201 response\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Returns single item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('submissionStatusId');",
							"    pm.expect(jsonData).to.have.property('noteId');",
							"    pm.expect(jsonData.noteId).to.not.be.null;",
							"    pm.expect(jsonData).to.have.property('note');",
							"    pm.expect(jsonData.submissionStatusId).to.equal(pm.collectionVariables.get('submissionStatusId'));",
							"    pm.expect(jsonData.submissionId).to.be.null;",
							"    pm.expect(jsonData.note).to.equal('adding note to submission status');",
							"    pm.collectionVariables.set('statusNoteId', jsonData.noteId);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "3018d5dc-da42-44e5-8782-6e70abfe2a78",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"note\": \"adding note to submission status\"\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}/statuses/{{submissionStatusId}}/notes",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}",
						"statuses",
						"{{submissionStatusId}}",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Status Notes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "62fb2a96-59cc-47d5-b287-a80b56e753a5",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"pm.test(\"Note belongs to status\", function () {",
							"    // assumes this is run after Add Status Note",
							"    var jsonData = pm.response.json()[0];",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData).to.have.property('submissionStatusId');",
							"    pm.expect(jsonData).to.have.property('noteId');",
							"    pm.expect(jsonData.submissionId).to.be.null;",
							"    pm.expect(jsonData.submissionStatusId).to.not.be.null;",
							"    pm.expect(jsonData.noteId).to.not.be.null;",
							"    pm.expect(jsonData.submissionStatusId).to.equal(pm.collectionVariables.get('submissionStatusId'));",
							"    pm.expect(jsonData.noteId).to.equal(pm.collectionVariables.get('statusNoteId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"code\": \"ASSIGNED\",\n\t\"assignedTo\": \"ME!\",\n\t\"notes\": [{\"note\": \"voila!\"}]\n}"
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}/statuses/{{submissionStatusId}}/notes",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}",
						"statuses",
						"{{submissionStatusId}}",
						"notes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Status Codes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "50bad69d-b11b-4ec1-a275-324a7e4de41f",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"pm.test(\"Items are status codes\", function () {",
							"    // assumes this is run after Add Status Note",
							"    var jsonData = pm.response.json()[0];",
							"    pm.expect(jsonData).to.have.property('code');",
							"    pm.expect(jsonData).to.have.property('display');",
							"    pm.expect(jsonData).to.have.property('enabled');",
							"    pm.expect(jsonData).to.have.property('nextCodes');",
							"    pm.expect(jsonData.code).to.not.be.null;",
							"    pm.expect(jsonData.display).to.not.be.null;",
							"    pm.expect(jsonData.enabled).to.not.be.null;",
							"    pm.expect(jsonData.nextCodes).to.not.be.null;",
							"    pm.expect(jsonData.enabled).to.be.an('boolean');",
							"    pm.expect(jsonData.nextCodes).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/current/statusCodes",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"current",
						"statusCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Status Codes",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "87cd50e3-d627-4c3a-bbb8-207828b8209c",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a7b6cfed-0396-4822-939b-3c217ecd637c",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Returns array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"code\": \"SUBMITTED\",\n        \"formVersionId\": 1,\n        \"display\": \"Submitted\",\n        \"enabled\": true,\n        \"nextCodes\": [\"ASSIGNED\",\"COMPLETED\"]\n    },\n    {\n        \"code\": \"ASSIGNED\",\n        \"formVersionId\": 1,\n        \"display\": \"Assigned\",\n        \"enabled\": true,\n        \"nextCodes\": [\"COMPLETED\"]\n    },\n    {\n        \"code\": \"COMPLETED\",\n        \"formVersionId\": 1,\n        \"display\": \"Completed\",\n        \"enabled\": true,\n        \"nextCodes\": []\n    },\n    {\n        \"code\": \"NEW_STATUS\",\n        \"formVersionId\": 1,\n        \"display\": \"New status added in Postman test\",\n        \"enabled\": true,\n        \"nextCodes\": [\"COMPLETED\",\"NEW_DISABLED_STATUS\"]\n    },\n    {\n        \"code\": \"NEW_DISABLED_STATUS\",\n        \"formVersionId\": 1,\n        \"display\": \"New status added in Postman test - not enabled\",\n        \"enabled\": false,\n        \"nextCodes\": [\"COMPLETED\",\"ONLY_REAL_CODES_ARE_ADDED\"]\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/current/statusCodes",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"current",
						"statusCodes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Submission",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8591c2fc-8b49-47c8-9003-f668c54e2dfe",
						"exec": [
							"var submission = pm.collectionVariables.get('submission');",
							"console.log(submission);",
							"var data = JSON.parse(submission);",
							"data.location.city='This could be anywhere';",
							"data.business.name='This is a different kind of business';",
							"data.contacts[0].email='first@contact.ca';",
							"data.contacts[1].email='second@contact.ca';",
							"console.log(data);",
							"pm.collectionVariables.set(\"changedSubmission\", JSON.stringify(data));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6ea7f9f5-a237-43a1-837b-f22b89127162",
						"exec": [
							"pm.test(\"200 response\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Returns the updated item\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('submissionId');",
							"    pm.expect(jsonData.submissionId).to.equal(pm.collectionVariables.get('submissionId'));",
							"    pm.expect(jsonData).to.have.property('confirmationId');",
							"    pm.expect(jsonData.confirmationId).to.equal(pm.collectionVariables.get('confirmationId'));",
							"    ",
							"    pm.expect(jsonData.location.city).to.equal('This could be anywhere');",
							"    pm.expect(jsonData.business.name).to.equal('This is a different kind of business');",
							"    pm.expect(jsonData.contacts[0].email).to.equal('first@contact.ca');",
							"    pm.expect(jsonData.contacts[1].email).to.equal('second@contact.ca');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{changedSubmission}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/{{path}}/api/v1/minesattestations/submissions/{{submissionId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{path}}",
						"api",
						"v1",
						"minesattestations",
						"submissions",
						"{{submissionId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a5152bff-33ce-4a97-8895-2f36c7bdfee3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "78e4f39f-6166-472f-a903-e37e0e182f4c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "20a46d7d-4b39-47d6-8ac1-725f7f0e7676",
			"key": "host",
			"value": "https://comfort-dev.pathfinder.gov.bc.ca",
			"type": "string"
		},
		{
			"id": "3f3c073c-3691-47e5-a2b3-74bec1802620",
			"key": "path",
			"value": "pr-12",
			"type": "string"
		},
		{
			"id": "3708418a-4d95-4a18-9bbc-bfec74b74a73",
			"key": "submissionId",
			"value": "11210c5b-a22b-45ff-9bf5-b7dec83dd2ce",
			"type": "string"
		},
		{
			"id": "d5e3a84d-aff9-42a0-bf9b-a194bfa81994",
			"key": "confirmationId",
			"value": "11210c5b",
			"type": "string"
		},
		{
			"id": "00758303-391f-463c-91a5-ab6e8cdda2d2",
			"key": "submissionStatusId",
			"value": 21,
			"type": "number"
		},
		{
			"id": "4d51b20e-d087-4ee1-bb30-8c3c3763824c",
			"key": "noteId",
			"value": 7,
			"type": "number"
		},
		{
			"id": "8bcae06d-ccb8-46bc-ad70-bb4bd85fa565",
			"key": "submission",
			"value": "{\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"formVersionId\":1,\"confirmationId\":\"11210c5b\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.150Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\",\"attestation\":{\"attestationId\":\"9d7dd5eb-fcd2-479d-8737-60b29cefa92e\",\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"guidelinesRead\":true,\"assessmentCompleted\":true,\"developedPlan\":true,\"protectionSignage\":true,\"workerContactPersonnel\":true,\"commonAreaDistancing\":true,\"sleepingAreaType\":\"SHARED\",\"sharedSleepingPerRoom\":7,\"sharedSleepingDistancing\":true,\"selfIsolateUnderstood\":true,\"selfIsolateAccommodation\":true,\"laundryServices\":true,\"wasteManagementGloves\":true,\"wasteManagementSchedule\":true,\"wasteManagementBags\":true,\"handWashingStations\":true,\"handWashingSoapWater\":true,\"handWashingWaterless\":true,\"handWashingPaperTowels\":true,\"handWashingSignage\":true,\"distancingMaintained\":true,\"distancingFaceShields\":true,\"disinfectingSchedule\":true,\"educationSignage\":true,\"educationContactPersonnel\":true,\"trainingCovid19\":true,\"trainingEtiquette\":true,\"trainingLocations\":true,\"trainingFirstAid\":true,\"trainingReporting\":true,\"mealsDistancing\":true,\"mealsDishware\":true,\"mealsDishwashing\":true,\"infectionSeparation\":true,\"infectionSymptoms\":true,\"infectionHeathLinkBC\":true,\"infectionSanitization\":true,\"infectionAccommodation\":true,\"infectedFeeding\":true,\"infectedHousekeeping\":true,\"infectedWaste\":true,\"certifyAccurateInformation\":true,\"agreeToInspection\":true,\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},\"business\":{\"businessId\":13,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"name\":\"Rad Biz\",\"orgBookId\":null,\"addressLine1\":\"1234 Here St\",\"addressLine2\":null,\"city\":\"Saanich\",\"province\":\"BC\",\"postalCode\":\"ABCDEF\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},\"contacts\":[{\"contactId\":25,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"contactType\":\"PRIMARY\",\"firstName\":\"Jane\",\"lastName\":\"Doe\",\"phone1\":\"1234567890\",\"phone2\":\"\",\"email\":\"jane@doe.com\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},{\"contactId\":26,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"contactType\":\"COVID_COORDINATOR\",\"firstName\":\"John\",\"lastName\":\"D'oh\",\"phone1\":\"0987654321\",\"phone2\":\"\",\"email\":\"john@doh.com\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"}],\"location\":{\"locationId\":13,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"startDate\":\"2020-05-10\",\"endDate\":\"2020-07-30\",\"city\":\"Victoria, BC\",\"cityLatitude\":null,\"cityLongitude\":null,\"mineNumber\":\"\",\"permitNumber\":\"\",\"numberOfWorkers\":10,\"accTents\":false,\"tentDetails\":\"\",\"accMotel\":false,\"motelName\":\"\",\"motelAddressLine1\":\"\",\"motelAddressLine2\":\"\",\"motelCity\":\"\",\"motelProvince\":\"\",\"motelPostalCode\":\"\",\"accWorkersHome\":false,\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},\"statuses\":[{\"submissionStatusId\":20,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"code\":\"SUBMITTED\",\"assignedTo\":null,\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.167Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\",\"notes\":[],\"statusCode\":{\"code\":\"SUBMITTED\",\"formVersionId\":1,\"display\":\"Submitted\",\"enabled\":true,\"nextCodes\":[\"ASSIGNED\",\"COMPLETED\"],\"createdBy\":\"migration-004\",\"createdAt\":\"2020-05-18T16:42:45.439Z\",\"updatedBy\":\"development\",\"updatedAt\":\"2020-05-18T18:18:32.928Z\"}}],\"notes\":[]}",
			"type": "string"
		},
		{
			"id": "d6c4029c-a813-48b4-94dd-4df74f699f2e",
			"key": "changedSubmission",
			"value": "{\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"formVersionId\":1,\"confirmationId\":\"11210c5b\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.150Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\",\"attestation\":{\"attestationId\":\"9d7dd5eb-fcd2-479d-8737-60b29cefa92e\",\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"guidelinesRead\":true,\"assessmentCompleted\":true,\"developedPlan\":true,\"protectionSignage\":true,\"workerContactPersonnel\":true,\"commonAreaDistancing\":true,\"sleepingAreaType\":\"SHARED\",\"sharedSleepingPerRoom\":7,\"sharedSleepingDistancing\":true,\"selfIsolateUnderstood\":true,\"selfIsolateAccommodation\":true,\"laundryServices\":true,\"wasteManagementGloves\":true,\"wasteManagementSchedule\":true,\"wasteManagementBags\":true,\"handWashingStations\":true,\"handWashingSoapWater\":true,\"handWashingWaterless\":true,\"handWashingPaperTowels\":true,\"handWashingSignage\":true,\"distancingMaintained\":true,\"distancingFaceShields\":true,\"disinfectingSchedule\":true,\"educationSignage\":true,\"educationContactPersonnel\":true,\"trainingCovid19\":true,\"trainingEtiquette\":true,\"trainingLocations\":true,\"trainingFirstAid\":true,\"trainingReporting\":true,\"mealsDistancing\":true,\"mealsDishware\":true,\"mealsDishwashing\":true,\"infectionSeparation\":true,\"infectionSymptoms\":true,\"infectionHeathLinkBC\":true,\"infectionSanitization\":true,\"infectionAccommodation\":true,\"infectedFeeding\":true,\"infectedHousekeeping\":true,\"infectedWaste\":true,\"certifyAccurateInformation\":true,\"agreeToInspection\":true,\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},\"business\":{\"businessId\":13,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"name\":\"This is a different kind of business\",\"orgBookId\":null,\"addressLine1\":\"1234 Here St\",\"addressLine2\":null,\"city\":\"Saanich\",\"province\":\"BC\",\"postalCode\":\"ABCDEF\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},\"contacts\":[{\"contactId\":25,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"contactType\":\"PRIMARY\",\"firstName\":\"Jane\",\"lastName\":\"Doe\",\"phone1\":\"1234567890\",\"phone2\":\"\",\"email\":\"first@contact.ca\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},{\"contactId\":26,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"contactType\":\"COVID_COORDINATOR\",\"firstName\":\"John\",\"lastName\":\"D'oh\",\"phone1\":\"0987654321\",\"phone2\":\"\",\"email\":\"second@contact.ca\",\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"}],\"location\":{\"locationId\":13,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"startDate\":\"2020-05-10\",\"endDate\":\"2020-07-30\",\"city\":\"This could be anywhere\",\"cityLatitude\":null,\"cityLongitude\":null,\"mineNumber\":\"\",\"permitNumber\":\"\",\"numberOfWorkers\":10,\"accTents\":false,\"tentDetails\":\"\",\"accMotel\":false,\"motelName\":\"\",\"motelAddressLine1\":\"\",\"motelAddressLine2\":\"\",\"motelCity\":\"\",\"motelProvince\":\"\",\"motelPostalCode\":\"\",\"accWorkersHome\":false,\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.155Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\"},\"statuses\":[{\"submissionStatusId\":20,\"submissionId\":\"11210c5b-a22b-45ff-9bf5-b7dec83dd2ce\",\"code\":\"SUBMITTED\",\"assignedTo\":null,\"createdBy\":\"public\",\"createdAt\":\"2020-05-18T19:05:19.167Z\",\"updatedBy\":null,\"updatedAt\":\"2020-05-18T19:05:19.140Z\",\"notes\":[],\"statusCode\":{\"code\":\"SUBMITTED\",\"formVersionId\":1,\"display\":\"Submitted\",\"enabled\":true,\"nextCodes\":[\"ASSIGNED\",\"COMPLETED\"],\"createdBy\":\"migration-004\",\"createdAt\":\"2020-05-18T16:42:45.439Z\",\"updatedBy\":\"development\",\"updatedAt\":\"2020-05-18T18:18:32.928Z\"}}],\"notes\":[]}",
			"type": "string"
		},
		{
			"id": "4e00dba0-02af-4d00-96a2-9297c5567308",
			"key": "statusCodes",
			"value": {
				"code": "SUBMITTED",
				"createdAt": "2020-05-18T16:42:45.439Z",
				"createdBy": "migration-004",
				"display": "Submitted",
				"enabled": true,
				"formVersionId": 1,
				"nextCodes": [
					{
						"code": "ASSIGNED",
						"display": "Assigned",
						"enabled": true
					},
					{
						"code": "COMPLETED",
						"display": "Completed",
						"enabled": true
					}
				],
				"updatedAt": "2020-05-18T18:18:32.928Z",
				"updatedBy": "development"
			},
			"type": "any"
		},
		{
			"id": "2a1c499e-e27a-4df4-9408-38836c12d08e",
			"key": "submissionNoteId",
			"value": 29,
			"type": "number"
		},
		{
			"id": "da4ff769-862a-4bf6-a649-4585686e0201",
			"key": "statusNoteId",
			"value": 30,
			"type": "number"
		}
	],
	"protocolProfileBehavior": {}
}