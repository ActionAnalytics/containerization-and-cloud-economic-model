---
apiVersion: v1
kind: Template
labels:
  template: "${APP_NAME}-reverse-proxy-template"
  app: "${APP_NAME}-reverse-proxy"
metadata:
  name: "${APP_NAME}-reverse-proxy-dc"
objects:
  # - kind: NetworkSecurityPolicy
  #   apiVersion: secops.pathfinder.gov.bc.ca/v1alpha1
  #   metadata:
  #     name: "${APP_NAME}-reverse-proxy-pods-to-egress-${NAMESPACE}"
  #   spec:
  #     description: |
  #       Allow app pods to open connections to the internet
  #     source:
  #       - - "$namespace=${NAMESPACE}"
  #         - "app=${APP_NAME}-reverse-proxy"
  #         - "deploymentconfig=${APP_NAME}-reverse-proxy"
  #         - role=reverse-proxy
  #     destination:
  #       - - ext:network=any
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: "${APP_NAME}-caddyfile"
    data:
      Caddyfile: |
        *:2015 {
            redir 302 {
                https://comfort.pathfinder.gov.bc.ca/app/${APP_NAME}/
            }

            log / stdout "{combined}"

            errors stdout
        }
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: "${APP_NAME}-reverse-proxy"
    spec:
      replicas: 2
      selector:
        app: "${APP_NAME}-reverse-proxy"
        deploymentconfig: "${APP_NAME}-reverse-proxy"
        role: reverse-proxy
      strategy:
        resources: {}
        type: Rolling
      template:
        metadata:
          labels:
            app: "${APP_NAME}-reverse-proxy"
            deploymentconfig: "${APP_NAME}-reverse-proxy"
            role: reverse-proxy
        spec:
          containers:
            - command:
                - sh
                - -c
                - exec caddy -quic -conf /mnt/Caddyfile
              image: docker-registry.default.svc:5000/bcgov/s2i-caddy:v1-stable
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                tcpSocket:
                  port: 2015
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: caddy
              ports:
                - containerPort: 2015
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                tcpSocket:
                  port: 2015
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources: {}
              volumeMounts:
                - mountPath: /mnt
                  name: caddyfile
                  readOnly: true
          volumes:
            - name: caddyfile
              configMap:
                defaultMode: 420
                name: "${APP_NAME}-caddyfile"
      test: false
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      name: "${APP_NAME}-reverse-proxy"
    spec:
      ports:
        - name: 2015-tcp
          port: 2015
          protocol: TCP
          targetPort: 2015
      selector:
        app: "${APP_NAME}-reverse-proxy"
        deploymentconfig: "${APP_NAME}-reverse-proxy"
        role: reverse-proxy
parameters:
  - name: APP_NAME
    description: Application name
    displayName: Application name
    required: true
  # - name: NAMESPACE
  #   description: Target namespace reference (i.e. 'k8vopl-dev')
  #   displayName: Target Namespace
  #   required: true
