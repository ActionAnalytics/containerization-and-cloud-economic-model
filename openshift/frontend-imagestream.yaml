---
apiVersion: v1
kind: Template
metadata:
  name: ${APP}-${COMPONENT}
labels:
  app: ${APP}
  component: ${COMPONENT}
parameters:
  - name: APP
    value: cem
  - name: COMPONENT
    value: frontend
  - name: CLONE_GIT_URL
    value: https://github.com/derekroberts/cem.git
  - name: CLONE_GIT_RELEASE
    value: openshift
  - name: BUILD_TAG
    value: latest
  - name: IMG_SRC_TAG
    value: '10'
  - name: IMG_SRC_NAME
    value: nodejs
  - name: IMG_SRC_NAMESPACE
    value: openshift
  - name: IMG_SRC_REPO
    value: docker-registry.default.svc:5000
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
      name: ${APP}-${COMPONENT}
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
      name: ${APP}-${COMPONENT}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP}-${COMPONENT}:${BUILD_TAG}
      source:
        dockerfile: |
          FROM ${IMG_SRC_REPO}/${IMG_SRC_NAMESPACE}/${IMG_SRC_NAME}:${IMG_SRC_TAG}

          EXPOSE "${PORT:-8080}"

          USER root
          WORKDIR /app
          RUN git clone ${CLONE_GIT_URL} -b ${CLONE_GIT_RELEASE} /tmp/app && \
              cp -rT /tmp/app/frontend . && \
              rm -rf /tmp/app
          RUN npm install

          CMD run dev
        type: Dockerfile
      strategy:
        type: Docker
      triggers:
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
